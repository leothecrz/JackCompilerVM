<class>
	<keyword>class</keyword>
	<identifier> Main </identifier>
	<symbol> { </symbol>
	<ClassVarDec>
		<keyword>static</keyword>
		<keyword>boolean</keyword>
		<identifier> test </identifier>
		<symbol> ; </symbol>
	</ClassVarDec>
	<Subroutine>
		<keyword>function</keyword>
		<keyword>void</keyword>
		<identifier> main </identifier>
		<symbol> ( </symbol>
		<parameterList>
		</parameterList>
		<symbol> ) </symbol>
		<symbol> { </symbol>
		<varDec>
			<keyword>var</keyword>
			<identifier> SquareGame </identifier>
			<identifier> game </identifier>
			<symbol> ; </symbol>
		</varDec>
		<Statements>
			<letStatement>
				<keyword>let</keyword>
				<identifier> game </identifier>
				<symbol> = </symbol>
				<expression>
					<term>
						<identifier>
							<null/><-1/><NULL/>
								SquareGame
							<null/><-1/><NULL/>
						 </identifier>
						<symbol> . </symbol>
						<identifier> new </identifier>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
					</term>
				</expression>
				<symbol> ; </symbol>
			</letStatement>
			<doStatement>
				<keyword>do</keyword>
				<identifier> game </identifier>
				<symbol> . </symbol>
				<identifier> run </identifier>
				<symbol> ( </symbol>
				<expressionList>
					<expression>
						<term>
						</term>
					</expression>
				</expressionList>
				<symbol> ) </symbol>
				<symbol> ; </symbol>
			</doStatement>
			<doStatement>
				<keyword>do</keyword>
				<identifier> game </identifier>
				<symbol> . </symbol>
				<identifier> dispose </identifier>
				<symbol> ( </symbol>
				<expressionList>
					<expression>
						<term>
						</term>
					</expression>
				</expressionList>
				<symbol> ) </symbol>
				<symbol> ; </symbol>
			</doStatement>
			<returnStatement>
				<keyword>return</keyword>
				<symbol> ; </symbol>
			</returnStatement>
		</Statements>
		<symbol> } </symbol>
	</Subroutine>
	<symbol> } </symbol>
</class>
