<class>
	<keyword>class</keyword>
	<identifier> Square </identifier>
	<symbol> { </symbol>
	<ClassVarDec>
		<keyword>field</keyword>
		<keyword>int</keyword>
		<identifier> x </identifier>
		<symbol> , </symbol>
		<identifier> y </identifier>
		<symbol> ; </symbol>
	</ClassVarDec>
	<ClassVarDec>
		<keyword>field</keyword>
		<keyword>int</keyword>
		<identifier> size </identifier>
		<symbol> ; </symbol>
	</ClassVarDec>
	<Subroutine>
		<keyword>constructor</keyword>
		<identifier> Square </identifier>
		<identifier> new </identifier>
		<symbol> ( </symbol>
		<parameterList>
			<keyword>int</keyword>
			<identifier> Ax </identifier>
			<symbol> , </symbol>
			<keyword>int</keyword>
			<identifier> Ay </identifier>
			<symbol> , </symbol>
			<keyword>int</keyword>
			<identifier> Asize </identifier>
		</parameterList>
		<symbol> ) </symbol>
		<symbol> { </symbol>
		<varDec>
		</varDec>
		<Statements>
			<letStatement>
				<keyword>let</keyword>
				<identifier> x </identifier>
				<symbol> = </symbol>
				<expression>
					<term>
						<identifier>
							<int/><0/><ARG/>
								Ax
							<int/><0/><ARG/>
						 </identifier>
					</term>
				</expression>
				<symbol> ; </symbol>
			</letStatement>
			<letStatement>
				<keyword>let</keyword>
				<identifier> y </identifier>
				<symbol> = </symbol>
				<expression>
					<term>
						<identifier>
							<int/><1/><ARG/>
								Ay
							<int/><1/><ARG/>
						 </identifier>
					</term>
				</expression>
				<symbol> ; </symbol>
			</letStatement>
			<letStatement>
				<keyword>let</keyword>
				<identifier> size </identifier>
				<symbol> = </symbol>
				<expression>
					<term>
						<identifier>
							<int/><2/><ARG/>
								Asize
							<int/><2/><ARG/>
						 </identifier>
					</term>
				</expression>
				<symbol> ; </symbol>
			</letStatement>
			<doStatement>
				<keyword>do</keyword>
				<identifier> draw </identifier>
				<symbol> ( </symbol>
				<expressionList>
					<expression>
						<term>
						</term>
					</expression>
				</expressionList>
				<symbol> ) </symbol>
				<symbol> ; </symbol>
			</doStatement>
			<returnStatement>
				<keyword>return</keyword>
				<expression>
					<term>
						<keyword>this</keyword>
					</term>
				</expression>
				<symbol> ; </symbol>
			</returnStatement>
		</Statements>
		<symbol> } </symbol>
	</Subroutine>
	<symbol> } </symbol>
</class>
