<class>
	<keyword>class</keyword>
	<identifier> Square </identifier>
	<symbol> { </symbol>
	<ClassVarDec>
		<keyword>field</keyword>
		<keyword>int</keyword>
		<identifier> x </identifier>
		<symbol> , </symbol>
		<identifier> y </identifier>
		<symbol> ; </symbol>
	</ClassVarDec>
	<ClassVarDec>
		<keyword>field</keyword>
		<keyword>int</keyword>
		<identifier> size </identifier>
		<symbol> ; </symbol>
	</ClassVarDec>
	<Subroutine>
		<keyword>constructor</keyword>
		<identifier> Square </identifier>
		<identifier> new </identifier>
		<symbol> ( </symbol>
		<parameterList>
			<keyword>int</keyword>
			<identifier> Ax </identifier>
			<symbol> , </symbol>
			<keyword>int</keyword>
			<identifier> Ay </identifier>
			<symbol> , </symbol>
			<keyword>int</keyword>
			<identifier> Asize </identifier>
		</parameterList>
		<symbol> ) </symbol>
		<symbol> { </symbol>
		<varDec>
		</varDec>
		<Statements>
			<letStatement>
				<keyword>let</keyword>
				<identifier> x </identifier>
				<symbol> = </symbol>
				<expression>
					<term>
						<identifier>
							<int/><0/><ARG/>
								Ax
							<int/><0/><ARG/>
						 </identifier>
					</term>
				</expression>
				<symbol> ; </symbol>
			</letStatement>
			<letStatement>
				<keyword>let</keyword>
				<identifier> y </identifier>
				<symbol> = </symbol>
				<expression>
					<term>
						<identifier>
							<int/><1/><ARG/>
								Ay
							<int/><1/><ARG/>
						 </identifier>
					</term>
				</expression>
				<symbol> ; </symbol>
			</letStatement>
			<letStatement>
				<keyword>let</keyword>
				<identifier> size </identifier>
				<symbol> = </symbol>
				<expression>
					<term>
						<identifier>
							<int/><2/><ARG/>
								Asize
							<int/><2/><ARG/>
						 </identifier>
					</term>
				</expression>
				<symbol> ; </symbol>
			</letStatement>
			<doStatement>
				<keyword>do</keyword>
				<identifier> draw </identifier>
				<symbol> ( </symbol>
				<expressionList>
					<expression>
						<term>
						</term>
					</expression>
				</expressionList>
				<symbol> ) </symbol>
				<symbol> ; </symbol>
			</doStatement>
			<returnStatement>
				<keyword>return</keyword>
				<expression>
					<term>
						<keyword>this</keyword>
					</term>
				</expression>
				<symbol> ; </symbol>
			</returnStatement>
		</Statements>
		<symbol> } </symbol>
	</Subroutine>
	<Subroutine>
		<keyword>method</keyword>
		<keyword>void</keyword>
		<identifier> dispose </identifier>
		<symbol> ( </symbol>
		<parameterList>
		</parameterList>
		<symbol> ) </symbol>
		<symbol> { </symbol>
		<varDec>
		</varDec>
		<Statements>
			<doStatement>
				<keyword>do</keyword>
				<identifier> Memory </identifier>
				<symbol> . </symbol>
				<identifier> deAlloc </identifier>
				<symbol> ( </symbol>
				<expressionList>
					<expression>
						<term>
							<keyword>this</keyword>
						</term>
					</expression>
				</expressionList>
				<symbol> ) </symbol>
				<symbol> ; </symbol>
			</doStatement>
			<returnStatement>
				<keyword>return</keyword>
				<symbol> ; </symbol>
			</returnStatement>
		</Statements>
		<symbol> } </symbol>
	</Subroutine>
	<Subroutine>
		<keyword>method</keyword>
		<keyword>void</keyword>
		<identifier> draw </identifier>
		<symbol> ( </symbol>
		<parameterList>
		</parameterList>
		<symbol> ) </symbol>
		<symbol> { </symbol>
		<varDec>
		</varDec>
		<Statements>
			<doStatement>
				<keyword>do</keyword>
				<identifier> Screen </identifier>
				<symbol> . </symbol>
				<identifier> setColor </identifier>
				<symbol> ( </symbol>
				<expressionList>
					<expression>
						<term>
							<keyword>true</keyword>
						</term>
					</expression>
				</expressionList>
				<symbol> ) </symbol>
				<symbol> ; </symbol>
			</doStatement>
			<doStatement>
				<keyword>do</keyword>
				<identifier> Screen </identifier>
				<symbol> . </symbol>
				<identifier> drawRectangle </identifier>
				<symbol> ( </symbol>
				<expressionList>
					<expression>
						<term>
							<identifier>
								<int/><0/><FIELD/>
									x
								<int/><0/><FIELD/>
							 </identifier>
						</term>
					</expression>
					<symbol> , </symbol>
					<expression>
						<term>
							<identifier>
								<int/><1/><FIELD/>
									y
								<int/><1/><FIELD/>
							 </identifier>
						</term>
					</expression>
					<symbol> , </symbol>
					<expression>
						<term>
							<identifier>
								<int/><0/><FIELD/>
									x
								<int/><0/><FIELD/>
							 </identifier>
						</term>
						<symbol> + </symbol>
						<term>
							<identifier>
								<int/><2/><FIELD/>
									size
								<int/><2/><FIELD/>
							 </identifier>
						</term>
					</expression>
					<symbol> , </symbol>
					<expression>
						<term>
							<identifier>
								<int/><1/><FIELD/>
									y
								<int/><1/><FIELD/>
							 </identifier>
						</term>
						<symbol> + </symbol>
						<term>
							<identifier>
								<int/><2/><FIELD/>
									size
								<int/><2/><FIELD/>
							 </identifier>
						</term>
					</expression>
				</expressionList>
				<symbol> ) </symbol>
				<symbol> ; </symbol>
			</doStatement>
			<returnStatement>
				<keyword>return</keyword>
				<symbol> ; </symbol>
			</returnStatement>
		</Statements>
		<symbol> } </symbol>
	</Subroutine>
	<Subroutine>
		<keyword>method</keyword>
		<keyword>void</keyword>
		<identifier> erase </identifier>
		<symbol> ( </symbol>
		<parameterList>
		</parameterList>
		<symbol> ) </symbol>
		<symbol> { </symbol>
		<varDec>
		</varDec>
		<Statements>
			<doStatement>
				<keyword>do</keyword>
				<identifier> Screen </identifier>
				<symbol> . </symbol>
				<identifier> setColor </identifier>
				<symbol> ( </symbol>
				<expressionList>
					<expression>
						<term>
							<keyword>false</keyword>
						</term>
					</expression>
				</expressionList>
				<symbol> ) </symbol>
				<symbol> ; </symbol>
			</doStatement>
			<doStatement>
				<keyword>do</keyword>
				<identifier> Screen </identifier>
				<symbol> . </symbol>
				<identifier> drawRectangle </identifier>
				<symbol> ( </symbol>
				<expressionList>
					<expression>
						<term>
							<identifier>
								<int/><0/><FIELD/>
									x
								<int/><0/><FIELD/>
							 </identifier>
						</term>
					</expression>
					<symbol> , </symbol>
					<expression>
						<term>
							<identifier>
								<int/><1/><FIELD/>
									y
								<int/><1/><FIELD/>
							 </identifier>
						</term>
					</expression>
					<symbol> , </symbol>
					<expression>
						<term>
							<identifier>
								<int/><0/><FIELD/>
									x
								<int/><0/><FIELD/>
							 </identifier>
						</term>
						<symbol> + </symbol>
						<term>
							<identifier>
								<int/><2/><FIELD/>
									size
								<int/><2/><FIELD/>
							 </identifier>
						</term>
					</expression>
					<symbol> , </symbol>
					<expression>
						<term>
							<identifier>
								<int/><1/><FIELD/>
									y
								<int/><1/><FIELD/>
							 </identifier>
						</term>
						<symbol> + </symbol>
						<term>
							<identifier>
								<int/><2/><FIELD/>
									size
								<int/><2/><FIELD/>
							 </identifier>
						</term>
					</expression>
				</expressionList>
				<symbol> ) </symbol>
				<symbol> ; </symbol>
			</doStatement>
			<returnStatement>
				<keyword>return</keyword>
				<symbol> ; </symbol>
			</returnStatement>
		</Statements>
		<symbol> } </symbol>
	</Subroutine>
	<Subroutine>
		<keyword>method</keyword>
		<keyword>void</keyword>
		<identifier> incSize </identifier>
		<symbol> ( </symbol>
		<parameterList>
		</parameterList>
		<symbol> ) </symbol>
		<symbol> { </symbol>
		<varDec>
		</varDec>
		<Statements>
			<ifStatement>
				<keyword>if</keyword>
				<symbol> ( </symbol>
				<expression>
					<term>
						<symbol> ( </symbol>
						<expression>
							<term>
								<symbol> ( </symbol>
								<expression>
									<term>
										<identifier>
											<int/><1/><FIELD/>
												y
											<int/><1/><FIELD/>
										 </identifier>
									</term>
									<symbol> + </symbol>
									<term>
										<identifier>
											<int/><2/><FIELD/>
												size
											<int/><2/><FIELD/>
										 </identifier>
									</term>
								</expression>
								<symbol> ) </symbol>
							</term>
							<symbol> < </symbol>
							<term>
								<integerConstant> 254 </integerConstant>
							</term>
						</expression>
						<symbol> ) </symbol>
					</term>
					<symbol> & </symbol>
					<term>
						<symbol> ( </symbol>
						<expression>
							<term>
								<symbol> ( </symbol>
								<expression>
									<term>
										<identifier>
											<int/><0/><FIELD/>
												x
											<int/><0/><FIELD/>
										 </identifier>
									</term>
									<symbol> + </symbol>
									<term>
										<identifier>
											<int/><2/><FIELD/>
												size
											<int/><2/><FIELD/>
										 </identifier>
									</term>
								</expression>
								<symbol> ) </symbol>
							</term>
							<symbol> < </symbol>
							<term>
								<integerConstant> 510 </integerConstant>
							</term>
						</expression>
						<symbol> ) </symbol>
					</term>
				</expression>
				<symbol> ) </symbol>
				<symbol> { </symbol>
				<Statements>
					<doStatement>
						<keyword>do</keyword>
						<identifier> erase </identifier>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<letStatement>
						<keyword>let</keyword>
						<identifier> size </identifier>
						<symbol> = </symbol>
						<expression>
							<term>
								<identifier>
									<int/><2/><FIELD/>
										size
									<int/><2/><FIELD/>
								 </identifier>
							</term>
							<symbol> + </symbol>
							<term>
								<integerConstant> 2 </integerConstant>
							</term>
						</expression>
						<symbol> ; </symbol>
					</letStatement>
					<doStatement>
						<keyword>do</keyword>
						<identifier> draw </identifier>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
				</Statements>
				<symbol> } </symbol>
			</ifStatement>
			<returnStatement>
				<keyword>return</keyword>
				<symbol> ; </symbol>
			</returnStatement>
		</Statements>
		<symbol> } </symbol>
	</Subroutine>
	<Subroutine>
		<keyword>method</keyword>
		<keyword>void</keyword>
		<identifier> decSize </identifier>
		<symbol> ( </symbol>
		<parameterList>
		</parameterList>
		<symbol> ) </symbol>
		<symbol> { </symbol>
		<varDec>
		</varDec>
		<Statements>
			<ifStatement>
				<keyword>if</keyword>
				<symbol> ( </symbol>
				<expression>
					<term>
						<identifier>
							<int/><2/><FIELD/>
								size
							<int/><2/><FIELD/>
						 </identifier>
					</term>
					<symbol> > </symbol>
					<term>
						<integerConstant> 2 </integerConstant>
					</term>
				</expression>
				<symbol> ) </symbol>
				<symbol> { </symbol>
				<Statements>
					<doStatement>
						<keyword>do</keyword>
						<identifier> erase </identifier>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<letStatement>
						<keyword>let</keyword>
						<identifier> size </identifier>
						<symbol> = </symbol>
						<expression>
							<term>
								<identifier>
									<int/><2/><FIELD/>
										size
									<int/><2/><FIELD/>
								 </identifier>
							</term>
							<symbol> - </symbol>
							<term>
								<integerConstant> 2 </integerConstant>
							</term>
						</expression>
						<symbol> ; </symbol>
					</letStatement>
					<doStatement>
						<keyword>do</keyword>
						<identifier> draw </identifier>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
				</Statements>
				<symbol> } </symbol>
			</ifStatement>
			<returnStatement>
				<keyword>return</keyword>
				<symbol> ; </symbol>
			</returnStatement>
		</Statements>
		<symbol> } </symbol>
	</Subroutine>
	<Subroutine>
		<keyword>method</keyword>
		<keyword>void</keyword>
		<identifier> moveUp </identifier>
		<symbol> ( </symbol>
		<parameterList>
		</parameterList>
		<symbol> ) </symbol>
		<symbol> { </symbol>
		<varDec>
		</varDec>
		<Statements>
			<ifStatement>
				<keyword>if</keyword>
				<symbol> ( </symbol>
				<expression>
					<term>
						<identifier>
							<int/><1/><FIELD/>
								y
							<int/><1/><FIELD/>
						 </identifier>
					</term>
					<symbol> > </symbol>
					<term>
						<integerConstant> 1 </integerConstant>
					</term>
				</expression>
				<symbol> ) </symbol>
				<symbol> { </symbol>
				<Statements>
					<doStatement>
						<keyword>do</keyword>
						<identifier> Screen </identifier>
						<symbol> . </symbol>
						<identifier> setColor </identifier>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<keyword>false</keyword>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword>do</keyword>
						<identifier> Screen </identifier>
						<symbol> . </symbol>
						<identifier> drawRectangle </identifier>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<identifier>
										<int/><0/><FIELD/>
											x
										<int/><0/><FIELD/>
									 </identifier>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<symbol> ( </symbol>
									<expression>
										<term>
											<identifier>
												<int/><1/><FIELD/>
													y
												<int/><1/><FIELD/>
											 </identifier>
										</term>
										<symbol> + </symbol>
										<term>
											<identifier>
												<int/><2/><FIELD/>
													size
												<int/><2/><FIELD/>
											 </identifier>
										</term>
									</expression>
									<symbol> ) </symbol>
								</term>
								<symbol> - </symbol>
								<term>
									<integerConstant> 1 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<identifier>
										<int/><0/><FIELD/>
											x
										<int/><0/><FIELD/>
									 </identifier>
								</term>
								<symbol> + </symbol>
								<term>
									<identifier>
										<int/><2/><FIELD/>
											size
										<int/><2/><FIELD/>
									 </identifier>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<identifier>
										<int/><1/><FIELD/>
											y
										<int/><1/><FIELD/>
									 </identifier>
								</term>
								<symbol> + </symbol>
								<term>
									<identifier>
										<int/><2/><FIELD/>
											size
										<int/><2/><FIELD/>
									 </identifier>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<letStatement>
						<keyword>let</keyword>
						<identifier> y </identifier>
						<symbol> = </symbol>
						<expression>
							<term>
								<identifier>
									<int/><1/><FIELD/>
										y
									<int/><1/><FIELD/>
								 </identifier>
							</term>
							<symbol> - </symbol>
							<term>
								<integerConstant> 2 </integerConstant>
							</term>
						</expression>
						<symbol> ; </symbol>
					</letStatement>
					<doStatement>
						<keyword>do</keyword>
						<identifier> Screen </identifier>
						<symbol> . </symbol>
						<identifier> setColor </identifier>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<keyword>true</keyword>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword>do</keyword>
						<identifier> Screen </identifier>
						<symbol> . </symbol>
						<identifier> drawRectangle </identifier>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<identifier>
										<int/><0/><FIELD/>
											x
										<int/><0/><FIELD/>
									 </identifier>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<identifier>
										<int/><1/><FIELD/>
											y
										<int/><1/><FIELD/>
									 </identifier>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<identifier>
										<int/><0/><FIELD/>
											x
										<int/><0/><FIELD/>
									 </identifier>
								</term>
								<symbol> + </symbol>
								<term>
									<identifier>
										<int/><2/><FIELD/>
											size
										<int/><2/><FIELD/>
									 </identifier>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<identifier>
										<int/><1/><FIELD/>
											y
										<int/><1/><FIELD/>
									 </identifier>
								</term>
								<symbol> + </symbol>
								<term>
									<integerConstant> 1 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
				</Statements>
				<symbol> } </symbol>
			</ifStatement>
			<returnStatement>
				<keyword>return</keyword>
				<symbol> ; </symbol>
			</returnStatement>
		</Statements>
		<symbol> } </symbol>
	</Subroutine>
	<Subroutine>
		<keyword>method</keyword>
		<keyword>void</keyword>
		<identifier> moveDown </identifier>
		<symbol> ( </symbol>
		<parameterList>
		</parameterList>
		<symbol> ) </symbol>
		<symbol> { </symbol>
		<varDec>
		</varDec>
		<Statements>
			<ifStatement>
				<keyword>if</keyword>
				<symbol> ( </symbol>
				<expression>
					<term>
						<symbol> ( </symbol>
						<expression>
							<term>
								<identifier>
									<int/><1/><FIELD/>
										y
									<int/><1/><FIELD/>
								 </identifier>
							</term>
							<symbol> + </symbol>
							<term>
								<identifier>
									<int/><2/><FIELD/>
										size
									<int/><2/><FIELD/>
								 </identifier>
							</term>
						</expression>
						<symbol> ) </symbol>
					</term>
					<symbol> < </symbol>
					<term>
						<integerConstant> 254 </integerConstant>
					</term>
				</expression>
				<symbol> ) </symbol>
				<symbol> { </symbol>
				<Statements>
					<doStatement>
						<keyword>do</keyword>
						<identifier> Screen </identifier>
						<symbol> . </symbol>
						<identifier> setColor </identifier>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<keyword>false</keyword>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword>do</keyword>
						<identifier> Screen </identifier>
						<symbol> . </symbol>
						<identifier> drawRectangle </identifier>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<identifier>
										<int/><0/><FIELD/>
											x
										<int/><0/><FIELD/>
									 </identifier>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<identifier>
										<int/><1/><FIELD/>
											y
										<int/><1/><FIELD/>
									 </identifier>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<identifier>
										<int/><0/><FIELD/>
											x
										<int/><0/><FIELD/>
									 </identifier>
								</term>
								<symbol> + </symbol>
								<term>
									<identifier>
										<int/><2/><FIELD/>
											size
										<int/><2/><FIELD/>
									 </identifier>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<identifier>
										<int/><1/><FIELD/>
											y
										<int/><1/><FIELD/>
									 </identifier>
								</term>
								<symbol> + </symbol>
								<term>
									<integerConstant> 1 </integerConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<letStatement>
						<keyword>let</keyword>
						<identifier> y </identifier>
						<symbol> = </symbol>
						<expression>
							<term>
								<identifier>
									<int/><1/><FIELD/>
										y
									<int/><1/><FIELD/>
								 </identifier>
							</term>
							<symbol> + </symbol>
							<term>
								<integerConstant> 2 </integerConstant>
							</term>
						</expression>
						<symbol> ; </symbol>
					</letStatement>
					<doStatement>
						<keyword>do</keyword>
						<identifier> Screen </identifier>
						<symbol> . </symbol>
						<identifier> setColor </identifier>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<keyword>true</keyword>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword>do</keyword>
						<identifier> Screen </identifier>
						<symbol> . </symbol>
						<identifier> drawRectangle </identifier>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<identifier>
										<int/><0/><FIELD/>
											x
										<int/><0/><FIELD/>
									 </identifier>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<symbol> ( </symbol>
									<expression>
										<term>
											<identifier>
												<int/><1/><FIELD/>
													y
												<int/><1/><FIELD/>
											 </identifier>
										</term>
										<symbol> + </symbol>
										<term>
											<identifier>
												<int/><2/><FIELD/>
													size
												<int/><2/><FIELD/>
											 </identifier>
										</term>
									</expression>
									<symbol> ) </symbol>
								</term>
								<symbol> - </symbol>
								<term>
									<integerConstant> 1 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<identifier>
										<int/><0/><FIELD/>
											x
										<int/><0/><FIELD/>
									 </identifier>
								</term>
								<symbol> + </symbol>
								<term>
									<identifier>
										<int/><2/><FIELD/>
											size
										<int/><2/><FIELD/>
									 </identifier>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<identifier>
										<int/><1/><FIELD/>
											y
										<int/><1/><FIELD/>
									 </identifier>
								</term>
								<symbol> + </symbol>
								<term>
									<identifier>
										<int/><2/><FIELD/>
											size
										<int/><2/><FIELD/>
									 </identifier>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
				</Statements>
				<symbol> } </symbol>
			</ifStatement>
			<returnStatement>
				<keyword>return</keyword>
				<symbol> ; </symbol>
			</returnStatement>
		</Statements>
		<symbol> } </symbol>
	</Subroutine>
	<Subroutine>
		<keyword>method</keyword>
		<keyword>void</keyword>
		<identifier> moveLeft </identifier>
		<symbol> ( </symbol>
		<parameterList>
		</parameterList>
		<symbol> ) </symbol>
		<symbol> { </symbol>
		<varDec>
		</varDec>
		<Statements>
			<ifStatement>
				<keyword>if</keyword>
				<symbol> ( </symbol>
				<expression>
					<term>
						<identifier>
							<int/><0/><FIELD/>
								x
							<int/><0/><FIELD/>
						 </identifier>
					</term>
					<symbol> > </symbol>
					<term>
						<integerConstant> 1 </integerConstant>
					</term>
				</expression>
				<symbol> ) </symbol>
				<symbol> { </symbol>
				<Statements>
					<doStatement>
						<keyword>do</keyword>
						<identifier> Screen </identifier>
						<symbol> . </symbol>
						<identifier> setColor </identifier>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<keyword>false</keyword>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword>do</keyword>
						<identifier> Screen </identifier>
						<symbol> . </symbol>
						<identifier> drawRectangle </identifier>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<symbol> ( </symbol>
									<expression>
										<term>
											<identifier>
												<int/><0/><FIELD/>
													x
												<int/><0/><FIELD/>
											 </identifier>
										</term>
										<symbol> + </symbol>
										<term>
											<identifier>
												<int/><2/><FIELD/>
													size
												<int/><2/><FIELD/>
											 </identifier>
										</term>
									</expression>
									<symbol> ) </symbol>
								</term>
								<symbol> - </symbol>
								<term>
									<integerConstant> 1 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<identifier>
										<int/><1/><FIELD/>
											y
										<int/><1/><FIELD/>
									 </identifier>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<identifier>
										<int/><0/><FIELD/>
											x
										<int/><0/><FIELD/>
									 </identifier>
								</term>
								<symbol> + </symbol>
								<term>
									<identifier>
										<int/><2/><FIELD/>
											size
										<int/><2/><FIELD/>
									 </identifier>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<identifier>
										<int/><1/><FIELD/>
											y
										<int/><1/><FIELD/>
									 </identifier>
								</term>
								<symbol> + </symbol>
								<term>
									<identifier>
										<int/><2/><FIELD/>
											size
										<int/><2/><FIELD/>
									 </identifier>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<letStatement>
						<keyword>let</keyword>
						<identifier> x </identifier>
						<symbol> = </symbol>
						<expression>
							<term>
								<identifier>
									<int/><0/><FIELD/>
										x
									<int/><0/><FIELD/>
								 </identifier>
							</term>
							<symbol> - </symbol>
							<term>
								<integerConstant> 2 </integerConstant>
							</term>
						</expression>
						<symbol> ; </symbol>
					</letStatement>
					<doStatement>
						<keyword>do</keyword>
						<identifier> Screen </identifier>
						<symbol> . </symbol>
						<identifier> setColor </identifier>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<keyword>true</keyword>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword>do</keyword>
						<identifier> Screen </identifier>
						<symbol> . </symbol>
						<identifier> drawRectangle </identifier>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<identifier>
										<int/><0/><FIELD/>
											x
										<int/><0/><FIELD/>
									 </identifier>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<identifier>
										<int/><1/><FIELD/>
											y
										<int/><1/><FIELD/>
									 </identifier>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<identifier>
										<int/><0/><FIELD/>
											x
										<int/><0/><FIELD/>
									 </identifier>
								</term>
								<symbol> + </symbol>
								<term>
									<integerConstant> 1 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<identifier>
										<int/><1/><FIELD/>
											y
										<int/><1/><FIELD/>
									 </identifier>
								</term>
								<symbol> + </symbol>
								<term>
									<identifier>
										<int/><2/><FIELD/>
											size
										<int/><2/><FIELD/>
									 </identifier>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
				</Statements>
				<symbol> } </symbol>
			</ifStatement>
			<returnStatement>
				<keyword>return</keyword>
				<symbol> ; </symbol>
			</returnStatement>
		</Statements>
		<symbol> } </symbol>
	</Subroutine>
	<Subroutine>
		<keyword>method</keyword>
		<keyword>void</keyword>
		<identifier> moveRight </identifier>
		<symbol> ( </symbol>
		<parameterList>
		</parameterList>
		<symbol> ) </symbol>
		<symbol> { </symbol>
		<varDec>
		</varDec>
		<Statements>
			<ifStatement>
				<keyword>if</keyword>
				<symbol> ( </symbol>
				<expression>
					<term>
						<symbol> ( </symbol>
						<expression>
							<term>
								<identifier>
									<int/><0/><FIELD/>
										x
									<int/><0/><FIELD/>
								 </identifier>
							</term>
							<symbol> + </symbol>
							<term>
								<identifier>
									<int/><2/><FIELD/>
										size
									<int/><2/><FIELD/>
								 </identifier>
							</term>
						</expression>
						<symbol> ) </symbol>
					</term>
					<symbol> < </symbol>
					<term>
						<integerConstant> 510 </integerConstant>
					</term>
				</expression>
				<symbol> ) </symbol>
				<symbol> { </symbol>
				<Statements>
					<doStatement>
						<keyword>do</keyword>
						<identifier> Screen </identifier>
						<symbol> . </symbol>
						<identifier> setColor </identifier>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<keyword>false</keyword>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword>do</keyword>
						<identifier> Screen </identifier>
						<symbol> . </symbol>
						<identifier> drawRectangle </identifier>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<identifier>
										<int/><0/><FIELD/>
											x
										<int/><0/><FIELD/>
									 </identifier>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<identifier>
										<int/><1/><FIELD/>
											y
										<int/><1/><FIELD/>
									 </identifier>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<identifier>
										<int/><0/><FIELD/>
											x
										<int/><0/><FIELD/>
									 </identifier>
								</term>
								<symbol> + </symbol>
								<term>
									<integerConstant> 1 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<identifier>
										<int/><1/><FIELD/>
											y
										<int/><1/><FIELD/>
									 </identifier>
								</term>
								<symbol> + </symbol>
								<term>
									<identifier>
										<int/><2/><FIELD/>
											size
										<int/><2/><FIELD/>
									 </identifier>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<letStatement>
						<keyword>let</keyword>
						<identifier> x </identifier>
						<symbol> = </symbol>
						<expression>
							<term>
								<identifier>
									<int/><0/><FIELD/>
										x
									<int/><0/><FIELD/>
								 </identifier>
							</term>
							<symbol> + </symbol>
							<term>
								<integerConstant> 2 </integerConstant>
							</term>
						</expression>
						<symbol> ; </symbol>
					</letStatement>
					<doStatement>
						<keyword>do</keyword>
						<identifier> Screen </identifier>
						<symbol> . </symbol>
						<identifier> setColor </identifier>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<keyword>true</keyword>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
					<doStatement>
						<keyword>do</keyword>
						<identifier> Screen </identifier>
						<symbol> . </symbol>
						<identifier> drawRectangle </identifier>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<symbol> ( </symbol>
									<expression>
										<term>
											<identifier>
												<int/><0/><FIELD/>
													x
												<int/><0/><FIELD/>
											 </identifier>
										</term>
										<symbol> + </symbol>
										<term>
											<identifier>
												<int/><2/><FIELD/>
													size
												<int/><2/><FIELD/>
											 </identifier>
										</term>
									</expression>
									<symbol> ) </symbol>
								</term>
								<symbol> - </symbol>
								<term>
									<integerConstant> 1 </integerConstant>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<identifier>
										<int/><1/><FIELD/>
											y
										<int/><1/><FIELD/>
									 </identifier>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<identifier>
										<int/><0/><FIELD/>
											x
										<int/><0/><FIELD/>
									 </identifier>
								</term>
								<symbol> + </symbol>
								<term>
									<identifier>
										<int/><2/><FIELD/>
											size
										<int/><2/><FIELD/>
									 </identifier>
								</term>
							</expression>
							<symbol> , </symbol>
							<expression>
								<term>
									<identifier>
										<int/><1/><FIELD/>
											y
										<int/><1/><FIELD/>
									 </identifier>
								</term>
								<symbol> + </symbol>
								<term>
									<identifier>
										<int/><2/><FIELD/>
											size
										<int/><2/><FIELD/>
									 </identifier>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
						<symbol> ; </symbol>
					</doStatement>
				</Statements>
				<symbol> } </symbol>
			</ifStatement>
			<returnStatement>
				<keyword>return</keyword>
				<symbol> ; </symbol>
			</returnStatement>
		</Statements>
		<symbol> } </symbol>
	</Subroutine>
	<symbol> } </symbol>
</class>
